{"version":3,"file":"static/js/713.de95c00a.chunk.js","mappings":"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","sources":["components/circle-gauges/index.js","components/loading/index.js","components/sliders/miniSlider/style.js","components/sliders/miniSlider/index.js","components/sliders/mainSlider/style.js","components/sliders/mainSlider/index.js","pages/home/style.js","pages/home/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nfunction CircleProgressbar(props) {\r\n    const [value = 0] = useState(parseInt(props.value.toFixed(0)));\r\n    const [strokColor, setStrokColor] = useState('0');\r\n    const { fontSize = 26, width } = props;\r\n\r\n    function chooseGaugeColor() {\r\n        if (value < 40) {\r\n            setStrokColor('red');\r\n        }\r\n        else if (value < 69) {\r\n            setStrokColor('yellow');\r\n\r\n        }\r\n        else if (value >= 69) {\r\n            setStrokColor('green');\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        chooseGaugeColor();\r\n    });\r\n    return (\r\n        <div style={{ width: width ? `${width}px` : '80px' }}>\r\n            <CircularProgressbar value={value} maxValue={100} text={`${value}%`} background={true} backgroundPadding={5} strokeWidth={5} styles={buildStyles(\r\n                {\r\n                    pathTransitionDuration: 3,\r\n                    textColor: '#fff',\r\n                    textSize: `${fontSize}px`,\r\n                    backgroundColor: '#111',\r\n                    trailColor: 'rgba(31, 184, 215, 0.25)',\r\n                    pathColor: strokColor\r\n                })}>\r\n                <div>\r\n                    <strong>66%</strong> mate\r\n                </div>\r\n            </CircularProgressbar>\r\n        </div>\r\n    )\r\n}\r\nCircleProgressbar.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    fontSize: PropTypes.number,\r\n    width: PropTypes.number\r\n};\r\nexport default CircleProgressbar;","import PropTypes from 'prop-types';\r\n\r\nfunction Loading(props) {\r\n    const { isLoading, width } = props;\r\n\r\n    return (\r\n        <div className=\"my-4\" style={{ 'display': isLoading ? 'block' : 'none' }}>\r\n            <div className=\"d-flex justify-content-center align-items-center text-center\">\r\n                <div className=\"spinner-border\" style={{ 'width': width ? width : '3rem', 'height': width ? width : '3rem' }} role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nLoading.propTypes = {\r\n    isLoading: PropTypes.bool.isRequired,\r\n    width: PropTypes.string,\r\n};\r\nexport default Loading;","import styled from 'styled-components';\r\n\r\nconst Style = styled.div`\r\nimg{\r\n    border-radius: 15px 15px 0 0;\r\n}   \r\n.miniSliderGauge{\r\n    position:absolute;\r\n    bottom: -15px;\r\n    left: 10px;\r\n    z-index:10;\r\n}\r\n`\r\nexport default Style;\r\n","import {Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {posterBaseUrl} from '../../../constant'\r\nimport {Swiper, SwiperSlide} from 'swiper/react'\r\nimport CircleProgressbar from '../../../components/circle-gauges'\r\nimport PropTypes from 'prop-types'\r\nimport SwiperCore from 'swiper'\r\nimport {Navigation, EffectCube} from 'swiper/modules'\r\nimport 'swiper/css'\r\nimport Style from './style'\r\nSwiperCore.use([EffectCube, Navigation])\r\n\r\nfunction MiniSlider(props) {\r\n  const {data = [], type} = props\r\n  function defaultImage(el) {\r\n    el.target.src = '/images/unkown-poster.jpg'\r\n  }\r\n  function renderFarm() {\r\n    return data\r\n      .filter((item) => item.poster_path || item.profile_path)\r\n      .map((item, index) => {\r\n        return (\r\n          <SwiperSlide key={item.id * index}>\r\n            <Link className='text-dark shadow-sm bg-white rounded-15 m-1' to={`/${item.media_type || type}/${item.id}`}>\r\n              <div className='position-relative'>\r\n                <img\r\n                  className='posterPathBackground'\r\n                  src={`${posterBaseUrl}${item.poster_path || item.profile_path}`}\r\n                  alt={item.original_title || item.original_name || item.name}\r\n                  onError={defaultImage}\r\n                />\r\n                {item.vote_average >= 0 && (\r\n                  <div className='miniSliderGauge'>\r\n                    <CircleProgressbar fontSize={32} value={item.vote_average * 10} width={40} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <h6\r\n                className='text-center px-1 pt-4 text-truncate'\r\n                title={item.original_title || item.original_name || item.name}\r\n              >\r\n                <b>\r\n                  <small>{item.original_title || item.original_name || item.name}</small>\r\n                </b>\r\n              </h6>\r\n              {item.release_date && <div className='text-center pb-2'>{item.release_date.split('-')[0] || ''}</div>}\r\n              {item.first_air_date && <div className='text-center pb-2'>{item.first_air_date.split('-')[0] || ''}</div>}\r\n              {item.character && !item.first_air_date && !item.release_date && (\r\n                <p className='text-center text-truncate px-1 pb-2'>\r\n                  <small>{item.character}</small>\r\n                </p>\r\n              )}\r\n              {!item.first_air_date && !item.release_date && !item.character && (\r\n                <div className='text-center'>&nbsp;</div>\r\n              )}\r\n            </Link>\r\n          </SwiperSlide>\r\n        )\r\n      })\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Style>\r\n        <Swiper\r\n          spaceBetween={5}\r\n          initialSlide={0}\r\n          navigation={false}\r\n          speed={800}\r\n          breakpoints={{\r\n            1920: {\r\n              slidesPerView: 9,\r\n              slidesPerGroup: 9,\r\n            },\r\n            1024: {\r\n              slidesPerView: 7,\r\n              slidesPerGroup: 7,\r\n            },\r\n            640: {\r\n              slidesPerView: 5,\r\n              slidesPerGroup: 5,\r\n            },\r\n            480: {\r\n              slidesPerView: 3,\r\n              slidesPerGroup: 3,\r\n            },\r\n            0: {\r\n              slidesPerView: 2,\r\n              slidesPerGroup: 2,\r\n            },\r\n          }}\r\n        >\r\n          {renderFarm()}\r\n          <div style={{height: '35px'}}></div>\r\n        </Swiper>\r\n      </Style>\r\n    </Fragment>\r\n  )\r\n}\r\nMiniSlider.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  type: PropTypes.string,\r\n}\r\nexport default MiniSlider\r\n","import styled from \"styled-components\";\r\nconst theme = {\r\n    primaryColor: '#dd003f',\r\n    white: '#fff',\r\n    gray: '#888'\r\n}\r\nconst Style = styled.div`\r\n.slideSize{\r\n    max-width:270px;\r\n    margin: 0 auto;\r\n    img{\r\n        min-height: 80px;\r\n        min-width: 130px;\r\n    }\r\n}\r\n.swiper-pagination{\r\n    &-bullet{\r\n        background:${theme.gray};\r\n        opacity:0.4;\r\n        &-active{\r\n            background:${theme.primaryColor};\r\n            opacity:1;\r\n        }\r\n    }\r\n}\r\n.mainSliderGauge{\r\n    position:absolute;\r\n    bottom:-20px;\r\n    left:15px;\r\n    z-index:10;\r\n}\r\n`\r\n\r\nexport default Style;","import Style from './style'\r\nimport {useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {posterBaseUrl} from '../../../constant'\r\nimport {Swiper, SwiperSlide} from 'swiper/react'\r\nimport Loading from '../../../components/loading'\r\nimport PropTypes from 'prop-types'\r\nimport CircleProgressbar from '../../../components/circle-gauges'\r\nimport SwiperCore from 'swiper'\r\nimport {Navigation, Pagination, EffectFade, EffectCoverflow, EffectCube, Autoplay} from 'swiper/modules'\r\n\r\nimport 'swiper/css'\r\n\r\nSwiperCore.use([EffectCoverflow, EffectCube, EffectFade, Navigation, Pagination, Autoplay])\r\nfunction MainSlider(props) {\r\n  const {data = []} = props\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (data.length) {\r\n      setLoading(false)\r\n    } else {\r\n      setLoading(true)\r\n    }\r\n  }, [data])\r\n\r\n  const imageDefault = (el) => {\r\n    el.target.src = '/images/unkown-poster.jpg'\r\n  }\r\n  function renderFarm() {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <SwiperSlide key={item.id}>\r\n          <div className='slideSize'>\r\n            <Link className='position-relative' to={`/movie/${item.id}`}>\r\n              <img\r\n                className='posterPathBackground'\r\n                src={`${posterBaseUrl}${item.poster_path}`}\r\n                onError={imageDefault}\r\n                alt={item.original_title}\r\n              />\r\n              <div className='mainSliderGauge'>\r\n                <CircleProgressbar value={item.vote_average * 10} width={50} />\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </SwiperSlide>\r\n      )\r\n    })\r\n  }\r\n  return (\r\n    <Style>\r\n      <Swiper\r\n        spaceBetween={4}\r\n        speed={800}\r\n        pagination={true}\r\n        loop={true}\r\n        autoplay={{delay: 4000}}\r\n        breakpoints={{\r\n          480: {\r\n            slidesPerView: 4,\r\n            slidesPerGroup: 4,\r\n          },\r\n          320: {\r\n            slidesPerView: 2.2,\r\n            slidesPerGroup: 2.2,\r\n          },\r\n        }}\r\n      >\r\n        {renderFarm()}\r\n        <Loading isLoading={loading} />\r\n        <div style={{height: '70px'}}></div>\r\n      </Swiper>\r\n    </Style>\r\n  )\r\n}\r\nMainSlider.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n}\r\nexport default MainSlider\r\n","import styled from 'styled-components';\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\nconst Style = styled.div`\r\n.hero{\r\n    min-height:320px;\r\n    background: url('/images/background/home-header-${getRandomInt(5)}.jpg') top center no-repeat;\r\n    background-size: cover;\r\n    .container-holder{\r\n        padding: 4rem 0;\r\n    }\r\n}\r\n.mainSliders{\r\n    max-width:1200px;\r\n    padding-top:3rem;\r\n    padding-bottom:3rem;\r\n    img{\r\n        border-radius:15px; \r\n    }\r\n}\r\n.miniSliders{\r\n    img{\r\n        border-radius:8px;\r\n    }\r\n    .prev, .next{\r\n        position:absolute;\r\n        top:50%;\r\n        transform:translate(-50%,0);\r\n    }\r\n    .next{\r\n        right:0;\r\n    }\r\n    .prev{\r\n        left:0;\r\n    }\r\n}\r\n\r\n`\r\nexport default Style;\r\n","import {Fragment, useEffect, useState, useRef} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {getRequest} from '../../api'\r\nimport {MiniSlider, MainSlider} from '../../components/sliders'\r\nimport {faAngleRight} from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport get from 'lodash/get'\r\nimport Style from './style'\r\n\r\nfunction Home() {\r\n  const [popularMovies, setPopularMovies] = useState([])\r\n  let [topRated, setTopRated] = useState([])\r\n  let [upComingMovies, setComingMovies] = useState([])\r\n  let [trendMovies, setPlayingMovies] = useState([])\r\n  let [searchKeyword, setSearchKeyword] = useState('')\r\n  let isMounted = useRef(false)\r\n  const POPULARMOVIES = get(popularMovies, 'results', [])\r\n\r\n  useEffect(() => {\r\n    document.title = 'Home'\r\n    isMounted.current = true\r\n    getRequest('/movie/popular').then((response) => {\r\n      setPopularMovies(response.data)\r\n    })\r\n\r\n    getRequest('/movie/top_rated').then((response) => {\r\n      setTopRated(response.data)\r\n    })\r\n\r\n    getRequest('/movie/upcoming').then((response) => {\r\n      setComingMovies(response.data)\r\n    })\r\n\r\n    getRequest('/trending/movie/day').then((response) => {\r\n      setPlayingMovies(response.data)\r\n    })\r\n    return () => {\r\n      isMounted.current = false\r\n    }\r\n  }, [])\r\n\r\n  function renderFarm() {\r\n    const TOPRATED = get(topRated, 'results', [])\r\n    const COMINGMOVIES = get(upComingMovies, 'results', [])\r\n    const TRENDMOVIES = get(trendMovies, 'results', [])\r\n    return (\r\n      <Fragment>\r\n        <div className='categorySliders px-3'>\r\n          <div className='d-flex justify-content-between align-items-center'>\r\n            <h3 className='py-2 text-capitalize'>\r\n              <b>Top Rated</b>\r\n            </h3>\r\n            <Link className='px-2 px-sm-3' to={`/forks/top_rated`}>\r\n              <span>See More</span> <FontAwesomeIcon icon={faAngleRight} />\r\n            </Link>\r\n          </div>\r\n          <MiniSlider type={'movie'} data={TOPRATED} />\r\n        </div>\r\n        <div className='categorySliders px-3'>\r\n          <div className='d-flex justify-content-between align-items-center'>\r\n            <h3 className='py-2 text-capitalize'>\r\n              <b>Upcoming</b>\r\n            </h3>\r\n            <Link className='px-2 px-sm-3' to={`/forks/upcoming`}>\r\n              <span>See More</span> <FontAwesomeIcon icon={faAngleRight} />\r\n            </Link>\r\n          </div>\r\n          <MiniSlider type={'movie'} data={COMINGMOVIES} />\r\n        </div>\r\n        <div className='categorySliders px-3'>\r\n          <div className='d-flex justify-content-between align-items-center'>\r\n            <h3 className='py-2 text-capitalize'>\r\n              <b>trending</b>\r\n            </h3>\r\n            <Link className='px-2 px-sm-3' to={`/forks/trending`}>\r\n              <span>See More</span> <FontAwesomeIcon icon={faAngleRight} />\r\n            </Link>\r\n          </div>\r\n          <MiniSlider type={'movie'} data={TRENDMOVIES} />\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n  return (\r\n    <Style>\r\n      <section className='hero d-flex align-content-center align-items-center'>\r\n        <div className='container'>\r\n          <div className='container-holder'>\r\n            <div className='d-flex flex-column text-light'>\r\n              <h2 className='text-capitalize'>Welcome</h2>\r\n              <h3>Millions of movies to discover. Explore now.</h3>\r\n            </div>\r\n            <div className='searchForm mx-auto'>\r\n              <form name='search' className='position-relative mt-5'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control py-2 rounded-pill'\r\n                  placeholder='Search for a movie ....'\r\n                  value={searchKeyword}\r\n                  onChange={(el) => setSearchKeyword(el.target.value)}\r\n                />\r\n                <Link to={`/search?query=${searchKeyword}`}>\r\n                  <button type='submit' className='btn btn-primary py-2 rounded-pill'>\r\n                    Search\r\n                  </button>\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div className='py-5 mainSliders container'>\r\n          <h4 className='px-2 py-2'>What's Popular</h4>\r\n          <MainSlider data={POPULARMOVIES} />\r\n        </div>\r\n      </section>\r\n      <section className='miniSliders'>\r\n        <div className='container'>{renderFarm()}</div>\r\n      </section>\r\n    </Style>\r\n  )\r\n}\r\nexport default Home\r\n"],"names":["props","value","useState","parseInt","toFixed","strokColor","setStrokColor","fontSize","width","useEffect","_jsx","style","concat","children","CircularProgressbar","maxValue","text","background","backgroundPadding","strokeWidth","styles","buildStyles","pathTransitionDuration","textColor","textSize","backgroundColor","trailColor","pathColor","_jsxs","isLoading","className","role","styled","div","_templateObject","_taggedTemplateLiteral","SwiperCore","use","EffectCube","Navigation","data","type","defaultImage","el","target","src","Fragment","Style","Swiper","spaceBetween","initialSlide","navigation","speed","breakpoints","slidesPerView","slidesPerGroup","filter","item","poster_path","profile_path","map","index","SwiperSlide","Link","to","media_type","id","posterBaseUrl","alt","original_title","original_name","name","onError","vote_average","CircleProgressbar","title","release_date","split","first_air_date","character","height","theme","EffectCoverflow","EffectFade","Pagination","Autoplay","loading","setLoading","length","imageDefault","pagination","loop","autoplay","delay","Loading","max","Math","floor","random","popularMovies","setPopularMovies","topRated","setTopRated","upComingMovies","setComingMovies","trendMovies","setPlayingMovies","searchKeyword","setSearchKeyword","isMounted","useRef","POPULARMOVIES","get","document","current","getRequest","then","response","placeholder","onChange","MainSlider","TOPRATED","COMINGMOVIES","TRENDMOVIES","FontAwesomeIcon","icon","faAngleRight","MiniSlider","renderFarm"],"sourceRoot":""}