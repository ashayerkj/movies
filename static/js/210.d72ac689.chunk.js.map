{"version":3,"file":"static/js/210.d72ac689.chunk.js","mappings":"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","sources":["components/circle-gauges/index.js","pages/user-profile/style.js","pages/user-profile/index.js","../node_modules/react-circular-progressbar/src/constants.ts","../node_modules/react-circular-progressbar/src/Path.tsx","../node_modules/react-circular-progressbar/src/CircularProgressbar.tsx","../node_modules/react-circular-progressbar/src/buildStyles.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nfunction CircleProgressbar(props) {\r\n    const [value = 0] = useState(parseInt(props.value.toFixed(0)));\r\n    const [strokColor, setStrokColor] = useState('0');\r\n    const { fontSize = 26, width } = props;\r\n\r\n    function chooseGaugeColor() {\r\n        if (value < 40) {\r\n            setStrokColor('red');\r\n        }\r\n        else if (value < 69) {\r\n            setStrokColor('yellow');\r\n\r\n        }\r\n        else if (value >= 69) {\r\n            setStrokColor('green');\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        chooseGaugeColor();\r\n    });\r\n    return (\r\n        <div style={{ width: width ? `${width}px` : '80px' }}>\r\n            <CircularProgressbar value={value} maxValue={100} text={`${value}%`} background={true} backgroundPadding={5} strokeWidth={5} styles={buildStyles(\r\n                {\r\n                    pathTransitionDuration: 3,\r\n                    textColor: '#fff',\r\n                    textSize: `${fontSize}px`,\r\n                    backgroundColor: '#111',\r\n                    trailColor: 'rgba(31, 184, 215, 0.25)',\r\n                    pathColor: strokColor\r\n                })}>\r\n                <div>\r\n                    <strong>66%</strong> mate\r\n                </div>\r\n            </CircularProgressbar>\r\n        </div>\r\n    )\r\n}\r\nCircleProgressbar.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    fontSize: PropTypes.number,\r\n    width: PropTypes.number\r\n};\r\nexport default CircleProgressbar;","import styled from 'styled-components';\r\n\r\nconst Style = styled.div`\r\n.userArea{\r\n    background-image:radial-gradient(at 30% top, #073844 0%, rgba(3,37,65, 1) 70%);\r\n    background-position: 0px 0px;\r\n    background-color: #0a1526;\r\n    position: relative;\r\n    top:0;\r\n    left:0;\r\n    div.inner_content {\r\n        background-image:url('/inner-light_blue.svg');\r\n        background-color: transparent;\r\n        background-repeat: no-repeat;\r\n        background-position: center -250px;\r\n        position: relative;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 2;\r\n        padding: 0;\r\n        min-height:50vh;\r\n    }\r\n    .avatarUser{\r\n        img{\r\n            max-width:150px;\r\n        }\r\n    }\r\n    .aboutUser{\r\n        min-width: 480px;\r\n    }\r\n    .circleRating{\r\n        width:60px;\r\n    }\r\n}\r\n`\r\nexport default Style;\r\n","import {Link} from 'react-router-dom'\r\nimport {useAuthState, logOut, useAuthDispatch} from '../../context'\r\nimport {useEffect, useRef, useState} from 'react'\r\nimport {getRequest} from '../../api'\r\nimport CircleProgressbar from '../../components/circle-gauges'\r\nimport Style from './style'\r\nimport {profileBaseUrl, gravatarBaseUrl} from '../../constant'\r\n\r\nfunction UserProfile() {\r\n  const satateInfo = useAuthState()\r\n  const dispatch = useAuthDispatch()\r\n  const [profileInfo, setProfileInfo] = useState({})\r\n\r\n  const mounted = useRef(false)\r\n  useEffect(() => {\r\n    mounted.current = true\r\n    getRequest('/account', {session_id: satateInfo.sessionId}).then((res) => {\r\n      if (res.status === 200) {\r\n        setProfileInfo(res.data)\r\n      }\r\n    })\r\n    return () => (mounted.current = false)\r\n  }, [satateInfo])\r\n\r\n  function renderprofileImage() {\r\n    if (profileInfo.avatar.tmdb.avatar_path) {\r\n      return (\r\n        <img src={`${profileBaseUrl}${profileInfo.avatar.tmdb.avatar_path}`} className='rounded-circle' alt='avatar' />\r\n      )\r\n    } else {\r\n      return (\r\n        <img\r\n          src={`${gravatarBaseUrl}/${profileInfo.avatar.gravatar.hash}.jpg`}\r\n          className='rounded-circle'\r\n          alt='avatar'\r\n        />\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <Style>\r\n      <section className='userArea py-2 bg-image'>\r\n        <div className='inner_content mt-3'>\r\n          <div className='container'>\r\n            <div className='d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start'>\r\n              <div className='avatarUser'>{profileInfo.avatar && renderprofileImage()}</div>\r\n              <div className='aboutUser px-4 text-white'>\r\n                <h2 className='text-center text-md-start'>\r\n                  <b>{profileInfo.name || satateInfo.username}</b>\r\n                </h2>\r\n                <div className='d-flex'>\r\n                  <div className='d-flex align-items-center me-3'>\r\n                    <CircleProgressbar value={100} width={60} />\r\n                    <p className='mb-0 ps-2 border-end pe-3'>Average Movie Score</p>\r\n                  </div>\r\n                  <div className='d-flex align-items-center'>\r\n                    <CircleProgressbar value={58} width={60} />\r\n                    <p className='mb-0 px-2'>Average TV Score</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='form'>\r\n              <form className='d-flex flex-wrap text-light'>\r\n                <div className='col-10 col-sm-4 m-3'>\r\n                  <label htmlFor='name' class='form-label'>\r\n                    Name\r\n                  </label>\r\n                  <input id='name' className='form-control' value='Abolfazl Zarei' placeholder='Name' readOnly />\r\n                </div>\r\n                <div className='col-10 col-sm-4 m-3'>\r\n                  <label htmlFor='email' class='form-label'>\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    id='email'\r\n                    className='form-control'\r\n                    value='zarei.mrabolfazl@gmail.com'\r\n                    placeholder='Email'\r\n                    readOnly\r\n                  />\r\n                </div>\r\n                <div className='col-10 col-sm-4 m-3'>\r\n                  <label htmlFor='nationalCode' class='form-label'>\r\n                    National Code\r\n                  </label>\r\n                  <input\r\n                    id='nationalCode'\r\n                    className='form-control'\r\n                    value='0640536433'\r\n                    placeholder='National Code'\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              </form>\r\n              <button className='auth-btn border-0 m-3' onClick={() => logOut(dispatch)}>\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className='d-none'>\r\n        <nav className='profileNavbar'>\r\n          <ul className='drop-down d-flex justify-content-center border-bottom'>\r\n            <li className='py-2 px-1'>\r\n              <Link className='btn' to='/profile'>\r\n                Your Profile\r\n              </Link>\r\n            </li>\r\n            <li className='py-2 px-1'>\r\n              <Link className='btn' to='/'>\r\n                Favoraites\r\n              </Link>\r\n            </li>\r\n            <li className='py-2 px-1'>\r\n              <button\r\n                className='btn dropdown-toggle'\r\n                type='button'\r\n                id='dropdownMenu'\r\n                data-bs-toggle='dropdown'\r\n                aria-expanded='false'\r\n              >\r\n                More\r\n              </button>\r\n              <ul className='dropdown-menu' aria-labelledby='dropdownMenu'>\r\n                <li>\r\n                  <Link to='/' className='dropdown-item'>\r\n                    Watchlist\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to='/' className='dropdown-item'>\r\n                    Lists\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </section>\r\n    </Style>\r\n  )\r\n}\r\nexport default UserProfile\r\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","import { CircularProgressbarStyles } from './types';\n\nexport default function buildStyles({\n  rotation,\n  strokeLinecap,\n  textColor,\n  textSize,\n  pathColor,\n  pathTransition,\n  pathTransitionDuration,\n  trailColor,\n  backgroundColor,\n}: {\n  rotation?: number; // Number of turns, 0-1\n  strokeLinecap?: any;\n  textColor?: string;\n  textSize?: string | number;\n  pathColor?: string;\n  pathTransition?: string;\n  pathTransitionDuration?: number; // Measured in seconds\n  trailColor?: string;\n  backgroundColor?: string;\n}): CircularProgressbarStyles {\n  const rotationTransform = rotation == null ? undefined : `rotate(${rotation}turn)`;\n  const rotationTransformOrigin = rotation == null ? undefined : 'center center';\n\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : `${pathTransitionDuration}s`,\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize,\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor,\n    }),\n  };\n}\n\nfunction removeUndefinedValues(obj: { [key: string]: any }) {\n  Object.keys(obj).forEach((key: string) => {\n    if (obj[key] == null) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}\n"],"names":["props","value","useState","parseInt","toFixed","strokColor","setStrokColor","fontSize","width","useEffect","_jsx","style","concat","children","CircularProgressbar","maxValue","text","background","backgroundPadding","strokeWidth","styles","buildStyles","pathTransitionDuration","textColor","textSize","backgroundColor","trailColor","pathColor","_jsxs","styled","div","_templateObject","_taggedTemplateLiteral","satateInfo","useAuthState","dispatch","useAuthDispatch","profileInfo","setProfileInfo","mounted","useRef","current","getRequest","session_id","sessionId","then","res","status","data","Style","className","avatar","tmdb","avatar_path","src","profileBaseUrl","alt","gravatarBaseUrl","gravatar","hash","name","username","CircleProgressbar","htmlFor","class","id","placeholder","readOnly","onClick","logOut","Link","to","type","VIEWBOX_CENTER_X","VIEWBOX_CENTER_Y","Path","_a","counterClockwise","dashRatio","pathRadius","createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","_super","__extends","prototype","getBackgroundPadding","this","getPathRadius","getPathRatio","minValue","min","max","render","circleRatio","classes","pathRatio","root","viewBox","cx","cy","r","trail","path","x","y","defaultProps","Component","strokeLinecap","pathTransition","rotationTransform","undefined","rotationTransformOrigin","removeUndefinedValues","stroke","transform","transformOrigin","transition","transitionDuration","fill","obj","keys","forEach","key"],"sourceRoot":""}