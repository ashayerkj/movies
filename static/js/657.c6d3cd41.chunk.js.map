{"version":3,"file":"static/js/657.c6d3cd41.chunk.js","mappings":"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","sources":["pages/auth/login/index.js"],"sourcesContent":["import {useEffect, useState} from 'react'\r\nimport {loginUser, useAuthDispatch} from '../../../context'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {faEye} from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {getRequest} from '../../../api'\r\nimport {Formik, Field, Form, ErrorMessage} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './style.css'\r\n\r\nfunction Login() {\r\n  const [passType, setPassType] = useState('password')\r\n  const [statusMessage, setStatusMessage] = useState('')\r\n  const [requestToken, setRequestToken] = useState('')\r\n  let history = useHistory()\r\n  const dispatch = useAuthDispatch()\r\n\r\n  useEffect(() => {\r\n    document.title = 'Login'\r\n    getRequest('/authentication/token/new?api_key=4ba2c80bd43f2892ecb3349fa445015f')\r\n      .then((response) => {\r\n        if (response) {\r\n          setRequestToken(response.data.request_token)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n  const handleLogin = async (value) => {\r\n    try {\r\n      const response = await loginUser(dispatch, {...value, request_token: requestToken})\r\n      if (!response.success) {\r\n        setStatusMessage(response.status_message)\r\n        setTimeout(() => {\r\n          setStatusMessage('')\r\n        }, 5000)\r\n        return\r\n      }\r\n      history.push('/')\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  function handlePasswordType() {\r\n    if (passType === 'password') {\r\n      setPassType('text')\r\n    } else {\r\n      setPassType('password')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{username: '', password: ''}}\r\n      validationSchema={Yup.object({\r\n        username: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\r\n        password: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\r\n      })}\r\n      onSubmit={(values, {setSubmitting}) => {\r\n        setTimeout(() => {\r\n          handleLogin(values)\r\n          setSubmitting(false)\r\n        }, 400)\r\n      }}\r\n    >\r\n      <div className='container'>\r\n        <div className='d-flex flex-column flex-grow-1 align-items-center justify-content-center vh-75'>\r\n          <h1 className='text-center my-4'>Login</h1>\r\n          <Form className='col-12 col-sm-8 col-md-6 col-lg-4' name='login'>\r\n            <div className='text-left'>\r\n              <div className='form-group py-1'>\r\n                <label htmlFor='username'>Username</label>\r\n                <Field\r\n                  className='form-control'\r\n                  name='username'\r\n                  type='text'\r\n                  placeholder='username'\r\n                  autoComplete='username'\r\n                />\r\n                <p>\r\n                  <small className='text-danger'>\r\n                    <ErrorMessage name='username' />\r\n                  </small>\r\n                </p>\r\n              </div>\r\n              <div className='form-group py-1'>\r\n                <label htmlFor='password'>Password</label>\r\n                <div className='position-relative'>\r\n                  <Field\r\n                    className='form-control'\r\n                    name='password'\r\n                    type={passType}\r\n                    placeholder='password'\r\n                    autoComplete='password'\r\n                  />\r\n                  <FontAwesomeIcon className='showPassword' icon={faEye} onClick={handlePasswordType} />\r\n                  <p>\r\n                    <small className='text-danger'>\r\n                      <ErrorMessage name='password' />\r\n                    </small>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <button type='submit' className='btn btn-success w-100'>\r\n                  Login\r\n                </button>\r\n              </div>\r\n              <p className='text-danger py-2'>\r\n                <small>{statusMessage}</small>\r\n              </p>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"names":["passType","setPassType","useState","statusMessage","setStatusMessage","requestToken","setRequestToken","history","useHistory","dispatch","useAuthDispatch","useEffect","document","title","getRequest","then","response","data","request_token","catch","error","console","log","_jsx","Formik","initialValues","username","password","validationSchema","Yup","max","required","onSubmit","values","_ref","setSubmitting","setTimeout","async","loginUser","value","success","status_message","push","handleLogin","children","className","_jsxs","Form","name","htmlFor","Field","type","placeholder","autoComplete","ErrorMessage","FontAwesomeIcon","icon","faEye","onClick"],"sourceRoot":""}