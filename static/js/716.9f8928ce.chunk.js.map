{"version":3,"file":"static/js/716.9f8928ce.chunk.js","mappings":"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","sources":["components/circle-gauges/index.js","components/loading/index.js","components/movies-list/style.js","components/movies-list/index.js","pages/home-forkes/style.js","pages/home-forkes/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nfunction CircleProgressbar(props) {\r\n    const [value = 0] = useState(parseInt(props.value.toFixed(0)));\r\n    const [strokColor, setStrokColor] = useState('0');\r\n    const { fontSize = 26, width } = props;\r\n\r\n    function chooseGaugeColor() {\r\n        if (value < 40) {\r\n            setStrokColor('red');\r\n        }\r\n        else if (value < 69) {\r\n            setStrokColor('yellow');\r\n\r\n        }\r\n        else if (value >= 69) {\r\n            setStrokColor('green');\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        chooseGaugeColor();\r\n    });\r\n    return (\r\n        <div style={{ width: width ? `${width}px` : '80px' }}>\r\n            <CircularProgressbar value={value} maxValue={100} text={`${value}%`} background={true} backgroundPadding={5} strokeWidth={5} styles={buildStyles(\r\n                {\r\n                    pathTransitionDuration: 3,\r\n                    textColor: '#fff',\r\n                    textSize: `${fontSize}px`,\r\n                    backgroundColor: '#111',\r\n                    trailColor: 'rgba(31, 184, 215, 0.25)',\r\n                    pathColor: strokColor\r\n                })}>\r\n                <div>\r\n                    <strong>66%</strong> mate\r\n                </div>\r\n            </CircularProgressbar>\r\n        </div>\r\n    )\r\n}\r\nCircleProgressbar.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    fontSize: PropTypes.number,\r\n    width: PropTypes.number\r\n};\r\nexport default CircleProgressbar;","import PropTypes from 'prop-types';\r\n\r\nfunction Loading(props) {\r\n    const { isLoading, width } = props;\r\n\r\n    return (\r\n        <div className=\"my-4\" style={{ 'display': isLoading ? 'block' : 'none' }}>\r\n            <div className=\"d-flex justify-content-center align-items-center text-center\">\r\n                <div className=\"spinner-border\" style={{ 'width': width ? width : '3rem', 'height': width ? width : '3rem' }} role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nLoading.propTypes = {\r\n    isLoading: PropTypes.bool.isRequired,\r\n    width: PropTypes.string,\r\n};\r\nexport default Loading;","import styled from 'styled-components';\r\n\r\nconst Style = styled.div`\r\n.movieBox{\r\n    img{\r\n        min-width: 100px;\r\n        min-height: 200px;\r\n        border-radius: 15px 15px 0 0;\r\n    }\r\n}\r\n@media (min-width:1400px){\r\n    .movieBox{\r\n        img{\r\n            min-height: 300px;\r\n        }\r\n    }\r\n}\r\n.rateGauge{\r\n    position:absolute;\r\n    bottom: -15px;\r\n    left: 10px;\r\n    z-index:10;\r\n}\r\n`\r\nexport default Style;\r\n","import {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {posterBaseUrl} from '../../constant'\r\nimport {defaultImage} from '../../helpers'\r\nimport CircleProgressbar from '../../components/circle-gauges'\r\nimport PropTypes from 'prop-types'\r\nimport Style from './style'\r\n\r\nfunction MoviesList(props) {\r\n  const {moviesInfo, type = 'movie'} = props\r\n\r\n  useEffect(() => {}, [props])\r\n\r\n  function renderFarm() {\r\n    const {results} = moviesInfo\r\n    return results.map((item) => {\r\n      const {\r\n        vote_average,\r\n        first_air_date,\r\n        release_date,\r\n        media_type,\r\n        id,\r\n        poster_path,\r\n        profile_path,\r\n        original_name,\r\n        name,\r\n        original_title,\r\n        title,\r\n      } = item\r\n      return (\r\n        <div key={id} className='movieBox my-2 col-6 col-sm-3 col-lg-2'>\r\n          <Link className='text-dark shadow-sm bg-white rounded-15 mx-2' to={`/${media_type || type}/${id}`}>\r\n            <div className='position-relative'>\r\n              <img\r\n                className='posterPathBackground'\r\n                src={`${posterBaseUrl}${poster_path || profile_path}`}\r\n                onError={defaultImage}\r\n                alt=''\r\n              />\r\n              {vote_average >= 0 && (\r\n                <div className='rateGauge'>\r\n                  <CircleProgressbar value={vote_average * 10} width={40} />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <h6 className='text-center text-truncate px-1 pt-4' title={original_title || original_name}>\r\n              {' '}\r\n              <b>\r\n                <small>{title || original_title || name || original_name}</small>\r\n              </b>\r\n            </h6>\r\n            {release_date && <div className='text-center pb-2'>{release_date.split('-')[0]} &nbsp;</div>}\r\n            {first_air_date && <div className='text-center pb-2'>{first_air_date.split('-')[0]}&nbsp;</div>}\r\n            {!first_air_date && !release_date && <div className='text-center pb-2'>&nbsp;</div>}\r\n          </Link>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n  return (\r\n    <Style>\r\n      <section className='d-flex flex-wrap justify-content-start'>{renderFarm()}</section>\r\n    </Style>\r\n  )\r\n}\r\nMoviesList.propTypes = {\r\n  moviesInfo: PropTypes.object.isRequired,\r\n  type: PropTypes.string,\r\n}\r\nexport default MoviesList\r\n","import styled from 'styled-components';\r\n\r\nconst Style = styled.div`\r\n.nav-tabs .nav-link{\r\n    border-color: #dee2e6 #dee2e6;\r\n    border-right: solid 1px #dee2e6;\r\n    border-top:none;\r\n    border-bottom:none;\r\n    border-radius: 0;\r\n    background: #032541;\r\n    color: #fff;\r\n    &:hover{\r\n        background: #97cfff;\r\n    }\r\n    &.active {\r\n    border:solid 1px #dee2e6 ;\r\n    border-right:none;\r\n    background: #fff;\r\n    color: #000;\r\n    }\r\n}\r\n`\r\nexport default Style;\r\n","import {useEffect, useState, useRef} from 'react'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {getRequest} from '../../api'\r\nimport MovieList from '../../components/movies-list'\r\nimport Loading from '../../components/loading'\r\nimport ReactPaginate from 'react-paginate'\r\nimport Style from './style'\r\n\r\nfunction Forks() {\r\n  const HISTORY = useHistory()\r\n  let {name} = useParams()\r\n  const [moviesInfo, setMovies] = useState({results: []})\r\n  const [loading, setLoading] = useState(false)\r\n  const [page, setPage] = useState(1)\r\n  const mounted = useRef(false)\r\n\r\n  useEffect(() => {\r\n    mounted.current = true\r\n    if (name !== 'trending' && name !== 'upcoming' && name !== 'top_rated') {\r\n      HISTORY.push('/page404')\r\n      return () => (mounted.current = false)\r\n    }\r\n    document.title = name\r\n    setLoading(true)\r\n    if (name === 'trending') {\r\n      getRequest(`/${name}/all/day`, {page}).then((res) => {\r\n        setMovies(res.data)\r\n        setLoading(false)\r\n      })\r\n    } else {\r\n      getRequest(`/movie/${name}`, {page}).then((res) => {\r\n        setMovies(res.data)\r\n        setLoading(false)\r\n      })\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page])\r\n  return (\r\n    <Style>\r\n      <div className='container'>\r\n        <section>\r\n          <h2 className='text-capitalize mb-4 pt-4'>{name.replace('_', ' ')}</h2>\r\n          <Loading isLoading={loading} />\r\n          <MovieList moviesInfo={moviesInfo} />\r\n        </section>\r\n        <section className='mx-auto py-4'>\r\n          {moviesInfo.total_pages > 1 && (\r\n            <ReactPaginate\r\n              className='bg-light'\r\n              breakLabel={'...'}\r\n              breakClassName={'text-success'}\r\n              pageCount={moviesInfo.total_pages}\r\n              marginPagesDisplayed={1}\r\n              pageRangeDisplayed={4}\r\n              onPageChange={(e) => {\r\n                setPage(++e.selected)\r\n                window.scrollTo(0, 0)\r\n              }}\r\n              containerClassName={'pagination'}\r\n              activeClassName={'active'}\r\n            />\r\n          )}\r\n        </section>\r\n      </div>\r\n    </Style>\r\n  )\r\n}\r\nexport default Forks\r\n"],"names":["props","value","useState","parseInt","toFixed","strokColor","setStrokColor","fontSize","width","useEffect","_jsx","style","concat","children","CircularProgressbar","maxValue","text","background","backgroundPadding","strokeWidth","styles","buildStyles","pathTransitionDuration","textColor","textSize","backgroundColor","trailColor","pathColor","_jsxs","isLoading","className","role","styled","div","_templateObject","_taggedTemplateLiteral","moviesInfo","type","Style","results","map","item","vote_average","first_air_date","release_date","media_type","id","poster_path","profile_path","original_name","name","original_title","title","Link","to","src","posterBaseUrl","onError","defaultImage","alt","CircleProgressbar","split","renderFarm","HISTORY","useHistory","useParams","setMovies","loading","setLoading","page","setPage","mounted","useRef","current","push","document","getRequest","then","res","data","replace","Loading","MovieList","total_pages","ReactPaginate","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selected","window","scrollTo","containerClassName","activeClassName"],"sourceRoot":""}