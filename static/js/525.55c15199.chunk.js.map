{"version":3,"file":"static/js/525.55c15199.chunk.js","mappings":"2JAiDA,QA5CA,SAA2BA,GACvB,MAAOC,EAAQ,IAAKC,EAAAA,EAAAA,UAASC,SAASH,EAAMC,MAAMG,QAAQ,MACnDC,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,MACvC,SAAEK,EAAW,GAAE,MAAEC,GAAUR,EAkBjC,OAHAS,EAAAA,EAAAA,YAAU,KAZFR,EAAQ,GACRK,EAAc,OAETL,EAAQ,GACbK,EAAc,UAGTL,GAAS,IACdK,EAAc,QAKA,KAGlBI,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEH,MAAOA,EAAK,GAAAI,OAAMJ,EAAK,MAAO,QAASK,UACjDH,EAAAA,EAAAA,KAACI,EAAAA,GAAmB,CAACb,MAAOA,EAAOc,SAAU,IAAKC,KAAI,GAAAJ,OAAKX,EAAK,KAAKgB,YAAY,EAAMC,kBAAmB,EAAGC,YAAa,EAAGC,QAAQC,EAAAA,EAAAA,IACjI,CACIC,uBAAwB,EACxBC,UAAW,OACXC,SAAS,GAADZ,OAAKL,EAAQ,MACrBkB,gBAAiB,OACjBC,WAAY,2BACZC,UAAWtB,IACZQ,UACHe,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACIH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,QAAY,cAKxC,C,kICzCA,MAWA,E,QAXcgB,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6J,aCQxBC,EAAAA,EAAWC,IAAI,CAACC,EAAAA,GAAYC,EAAAA,KA4F5B,QA1FA,SAAoBpC,GAClB,MAAM,KAACqC,EAAO,GAAE,KAAEC,GAAQtC,EAC1B,SAASuC,EAAaC,GACpBA,EAAGC,OAAOC,IAAM,2BAClB,CA4CA,OACEhC,EAAAA,EAAAA,KAACiC,EAAAA,SAAQ,CAAA9B,UACPH,EAAAA,EAAAA,KAACkC,EAAK,CAAA/B,UACJe,EAAAA,EAAAA,MAACiB,EAAAA,GAAM,CACLC,aAAc,EACdC,aAAc,EACdC,YAAY,EACZC,MAAO,IACPC,YAAa,CACX,KAAM,CACJC,cAAe,EACfC,eAAgB,GAElB,KAAM,CACJD,cAAe,EACfC,eAAgB,GAElB,IAAK,CACHD,cAAe,EACfC,eAAgB,GAElB,IAAK,CACHD,cAAe,EACfC,eAAgB,GAElB,EAAG,CACDD,cAAe,EACfC,eAAgB,IAElBvC,SAAA,CAvEDwB,EACJgB,QAAQC,GAASA,EAAKC,aAAeD,EAAKE,eAC1CC,KAAI,CAACH,EAAMI,KAERhD,EAAAA,EAAAA,KAACiD,EAAAA,GAAW,CAAA9C,UACVe,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAACC,UAAU,8CAA8CC,GAAE,IAAAlD,OAAM0C,EAAKS,YAAczB,EAAI,KAAA1B,OAAI0C,EAAKU,IAAKnD,SAAA,EACzGe,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,oBAAmBhD,SAAA,EAChCH,EAAAA,EAAAA,KAAA,OACEmD,UAAU,uBACVnB,IAAG,GAAA9B,OAAKqD,EAAAA,IAAarD,OAAG0C,EAAKC,aAAeD,EAAKE,cACjDU,IAAKZ,EAAKa,gBAAkBb,EAAKc,eAAiBd,EAAKe,KACvDC,QAAS/B,IAEVe,EAAKiB,cAAgB,IACpB7D,EAAAA,EAAAA,KAAA,OAAKmD,UAAU,kBAAiBhD,UAC9BH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAiB,CAACjE,SAAU,GAAIN,MAA2B,GAApBqD,EAAKiB,aAAmB/D,MAAO,WAI7EE,EAAAA,EAAAA,KAAA,MACEmD,UAAU,sCACVY,MAAOnB,EAAKa,gBAAkBb,EAAKc,eAAiBd,EAAKe,KAAKxD,UAE9DH,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAAA,SAAAG,SAAQyC,EAAKa,gBAAkBb,EAAKc,eAAiBd,EAAKe,WAG7Df,EAAKoB,eAAgBhE,EAAAA,EAAAA,KAAA,OAAKmD,UAAU,mBAAkBhD,SAAEyC,EAAKoB,aAAaC,MAAM,KAAK,IAAM,KAC3FrB,EAAKsB,iBAAkBlE,EAAAA,EAAAA,KAAA,OAAKmD,UAAU,mBAAkBhD,SAAEyC,EAAKsB,eAAeD,MAAM,KAAK,IAAM,KAC/FrB,EAAKuB,YAAcvB,EAAKsB,iBAAmBtB,EAAKoB,eAC/ChE,EAAAA,EAAAA,KAAA,KAAGmD,UAAU,sCAAqChD,UAChDH,EAAAA,EAAAA,KAAA,SAAAG,SAAQyC,EAAKuB,eAGfvB,EAAKsB,iBAAmBtB,EAAKoB,eAAiBpB,EAAKuB,YACnDnE,EAAAA,EAAAA,KAAA,OAAKmD,UAAU,cAAahD,SAAC,aA/BjByC,EAAKU,GAAKN,MAsE5BhD,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACmE,OAAQ,gBAK/B,C,0HC/FA,MAUA,E,QAVcjD,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oP,aCuFxB,QAhFA,WACE,MAAM,GAACgC,IAAMe,EAAAA,EAAAA,MACNC,EAAYC,IAAiB/E,EAAAA,EAAAA,UAAS,CAAC,IACvCgF,EAAcC,IAAmBjF,EAAAA,EAAAA,UAAS,IA2EjD,OAzEAO,EAAAA,EAAAA,YAAU,KACR2E,OAAOC,SAAS,EAAG,IACnBC,EAAAA,EAAAA,IAAW,WAAD1E,OAAYoD,IAAMuB,MAAMC,IAChCP,EAAcO,EAASnD,KAAK,KAE9BiD,EAAAA,EAAAA,IAAW,WAAD1E,OAAYoD,EAAE,sBAAqBuB,MAAMC,IACjDL,EAAgBK,EAASnD,KAAKoD,KAAK,GACnC,GACD,CAACzB,KA6DJvD,EAAAA,EAAAA,YAAU,KACRiF,SAASjB,MAAQO,EAAWX,IAAI,GAC/B,CAACW,KAEGtE,EAAAA,EAAAA,KAACkC,EAAK,CAAA/B,UA7DTe,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,yBAAwBhD,SAAA,EACrCH,EAAAA,EAAAA,KAAA,OAAKmD,UAAU,YAAWhD,UACxBe,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,oFAAmFhD,SAAA,EAChGe,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,2BAA0BhD,SAAA,EACvCH,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,OACEmD,UAAU,kDACVnB,IAAG,GAAA9B,OAAKqD,EAAAA,IAAarD,OAAGoE,EAAWxB,cACnCc,QAAS/B,EAAAA,GACT2B,IAAI,UAIRtC,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,2DAA0DhD,SAAA,EACvEe,EAAAA,EAAAA,MAAA,KAAGiC,UAAU,OAAMhD,SAAA,EACjBH,EAAAA,EAAAA,KAAA,KAAGmD,UAAU,UAAShD,SAAC,eACvBH,EAAAA,EAAAA,KAAA,QAAAG,SAAOmE,EAAWW,0BAEnBX,EAAWY,OAAS,IACnBhE,EAAAA,EAAAA,MAAA,KAAGiC,UAAU,OAAMhD,SAAA,EACjBH,EAAAA,EAAAA,KAAA,KAAGmD,UAAU,UAAShD,SAAC,WACA,IAAtBmE,EAAWY,QAAelF,EAAAA,EAAAA,KAAA,QAAAG,SAAM,YAAgBH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,aAG3De,EAAAA,EAAAA,MAAA,KAAGiC,UAAU,OAAMhD,SAAA,EACjBH,EAAAA,EAAAA,KAAA,KAAGmD,UAAU,UAAShD,SAAC,aACtBmE,EAAWa,UAAWnF,EAAAA,EAAAA,KAAA,QAAAG,SAAOmE,EAAWa,YAAmBnF,EAAAA,EAAAA,KAAA,QAAAG,SAAM,UAEpEe,EAAAA,EAAAA,MAAA,KAAGiC,UAAU,OAAMhD,SAAA,EACjBH,EAAAA,EAAAA,KAAA,KAAGmD,UAAU,UAAShD,SAAC,mBACtBmE,EAAWc,gBAAiBpF,EAAAA,EAAAA,KAAA,QAAAG,SAAOmE,EAAWc,kBAAyBpF,EAAAA,EAAAA,KAAA,QAAAG,SAAM,gBAIpFe,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,qEAAoEhD,SAAA,EACjFH,EAAAA,EAAAA,KAAA,OAAAG,UACEe,EAAAA,EAAAA,MAAA,MAAIiC,UAAU,eAAchD,SAAA,CAAEmE,EAAWX,KAAK,UAEhDzC,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAImD,UAAU,OAAMhD,SAAC,cACpBmE,EAAWe,WACVrF,EAAAA,EAAAA,KAAA,KAAGmD,UAAU,oBAAmBhD,SAAEmE,EAAWe,YAAc,iCAAAnF,OAE1BoE,EAAWX,KAAI,iBAM1DzC,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,YAAWhD,SAAA,EACxBH,EAAAA,EAAAA,KAAA,MAAImD,UAAU,6BAA4BhD,SAAC,YAC3CH,EAAAA,EAAAA,KAACsF,EAAAA,EAAU,CAAC3D,KAAM6C,WAW5B,C","sources":["components/circle-gauges/index.js","components/sliders/miniSlider/style.js","components/sliders/miniSlider/index.js","pages/person/style.js","pages/person/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nfunction CircleProgressbar(props) {\r\n    const [value = 0] = useState(parseInt(props.value.toFixed(0)));\r\n    const [strokColor, setStrokColor] = useState('0');\r\n    const { fontSize = 26, width } = props;\r\n\r\n    function chooseGaugeColor() {\r\n        if (value < 40) {\r\n            setStrokColor('red');\r\n        }\r\n        else if (value < 69) {\r\n            setStrokColor('yellow');\r\n\r\n        }\r\n        else if (value >= 69) {\r\n            setStrokColor('green');\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        chooseGaugeColor();\r\n    });\r\n    return (\r\n        <div style={{ width: width ? `${width}px` : '80px' }}>\r\n            <CircularProgressbar value={value} maxValue={100} text={`${value}%`} background={true} backgroundPadding={5} strokeWidth={5} styles={buildStyles(\r\n                {\r\n                    pathTransitionDuration: 3,\r\n                    textColor: '#fff',\r\n                    textSize: `${fontSize}px`,\r\n                    backgroundColor: '#111',\r\n                    trailColor: 'rgba(31, 184, 215, 0.25)',\r\n                    pathColor: strokColor\r\n                })}>\r\n                <div>\r\n                    <strong>66%</strong> mate\r\n                </div>\r\n            </CircularProgressbar>\r\n        </div>\r\n    )\r\n}\r\nCircleProgressbar.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    fontSize: PropTypes.number,\r\n    width: PropTypes.number\r\n};\r\nexport default CircleProgressbar;","import styled from 'styled-components';\r\n\r\nconst Style = styled.div`\r\nimg{\r\n    border-radius: 15px 15px 0 0;\r\n}   \r\n.miniSliderGauge{\r\n    position:absolute;\r\n    bottom: -15px;\r\n    left: 10px;\r\n    z-index:10;\r\n}\r\n`\r\nexport default Style;\r\n","import {Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {posterBaseUrl} from '../../../constant'\r\nimport {Swiper, SwiperSlide} from 'swiper/react'\r\nimport CircleProgressbar from '../../../components/circle-gauges'\r\nimport PropTypes from 'prop-types'\r\nimport SwiperCore from 'swiper'\r\nimport {Navigation, EffectCube} from 'swiper/modules'\r\nimport 'swiper/css'\r\nimport Style from './style'\r\nSwiperCore.use([EffectCube, Navigation])\r\n\r\nfunction MiniSlider(props) {\r\n  const {data = [], type} = props\r\n  function defaultImage(el) {\r\n    el.target.src = '/images/unkown-poster.jpg'\r\n  }\r\n  function renderFarm() {\r\n    return data\r\n      .filter((item) => item.poster_path || item.profile_path)\r\n      .map((item, index) => {\r\n        return (\r\n          <SwiperSlide key={item.id * index}>\r\n            <Link className='text-dark shadow-sm bg-white rounded-15 m-1' to={`/${item.media_type || type}/${item.id}`}>\r\n              <div className='position-relative'>\r\n                <img\r\n                  className='posterPathBackground'\r\n                  src={`${posterBaseUrl}${item.poster_path || item.profile_path}`}\r\n                  alt={item.original_title || item.original_name || item.name}\r\n                  onError={defaultImage}\r\n                />\r\n                {item.vote_average >= 0 && (\r\n                  <div className='miniSliderGauge'>\r\n                    <CircleProgressbar fontSize={32} value={item.vote_average * 10} width={40} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <h6\r\n                className='text-center px-1 pt-4 text-truncate'\r\n                title={item.original_title || item.original_name || item.name}\r\n              >\r\n                <b>\r\n                  <small>{item.original_title || item.original_name || item.name}</small>\r\n                </b>\r\n              </h6>\r\n              {item.release_date && <div className='text-center pb-2'>{item.release_date.split('-')[0] || ''}</div>}\r\n              {item.first_air_date && <div className='text-center pb-2'>{item.first_air_date.split('-')[0] || ''}</div>}\r\n              {item.character && !item.first_air_date && !item.release_date && (\r\n                <p className='text-center text-truncate px-1 pb-2'>\r\n                  <small>{item.character}</small>\r\n                </p>\r\n              )}\r\n              {!item.first_air_date && !item.release_date && !item.character && (\r\n                <div className='text-center'>&nbsp;</div>\r\n              )}\r\n            </Link>\r\n          </SwiperSlide>\r\n        )\r\n      })\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Style>\r\n        <Swiper\r\n          spaceBetween={5}\r\n          initialSlide={0}\r\n          navigation={false}\r\n          speed={800}\r\n          breakpoints={{\r\n            1920: {\r\n              slidesPerView: 9,\r\n              slidesPerGroup: 9,\r\n            },\r\n            1024: {\r\n              slidesPerView: 7,\r\n              slidesPerGroup: 7,\r\n            },\r\n            640: {\r\n              slidesPerView: 5,\r\n              slidesPerGroup: 5,\r\n            },\r\n            480: {\r\n              slidesPerView: 3,\r\n              slidesPerGroup: 3,\r\n            },\r\n            0: {\r\n              slidesPerView: 2,\r\n              slidesPerGroup: 2,\r\n            },\r\n          }}\r\n        >\r\n          {renderFarm()}\r\n          <div style={{height: '35px'}}></div>\r\n        </Swiper>\r\n      </Style>\r\n    </Fragment>\r\n  )\r\n}\r\nMiniSlider.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  type: PropTypes.string,\r\n}\r\nexport default MiniSlider\r\n","import styled from 'styled-components';\r\n\r\nconst Style = styled.div`\r\n.backgroundDrop{\r\n        background-image:linear-gradient(to right, #073844  150px, rgba(16,5,65,0.6)  100%);\r\n        @media (max-width:768px){\r\n                img.actImage{\r\n            max-width:150px ;\r\n        }\r\n        }\r\n}\r\n`\r\nexport default Style;\r\n","import {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {getRequest} from '../../api'\r\nimport {posterBaseUrl} from '../../constant'\r\nimport {defaultImage} from '../../helpers'\r\nimport MiniSlider from '../../components/sliders/miniSlider'\r\n\r\nimport Style from './style'\r\n\r\nfunction Person() {\r\n  const {id} = useParams()\r\n  const [personInfo, setPersonInfo] = useState({})\r\n  const [personMovies, setPersonMovies] = useState([])\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    getRequest(`/person/${id}`).then((response) => {\r\n      setPersonInfo(response.data)\r\n    })\r\n    getRequest(`/person/${id}/combined_credits`).then((response) => {\r\n      setPersonMovies(response.data.cast)\r\n    })\r\n  }, [id])\r\n\r\n  function renderFarm() {\r\n    return (\r\n      <div className='backgroundDrop py-md-5'>\r\n        <div className='container'>\r\n          <div className='d-flex justify-content-start align-items-start flex-wrap flex-md-nowrap py-4 px-1'>\r\n            <div className='col-12 col-md-3 col-xl-2'>\r\n              <div>\r\n                <img\r\n                  className='actImage posterPathBackground rounded-3 mx-auto'\r\n                  src={`${posterBaseUrl}${personInfo.profile_path}`}\r\n                  onError={defaultImage}\r\n                  alt='ok'\r\n                />\r\n              </div>\r\n\r\n              <div className='d-flex flex-wrap justify-content-between text-light py-2'>\r\n                <p className='me-4'>\r\n                  <b className='d-block'>Known For</b>\r\n                  <span>{personInfo.known_for_department}</span>\r\n                </p>\r\n                {personInfo.gender > 0 && (\r\n                  <p className='me-4'>\r\n                    <b className='d-block'>Gender</b>\r\n                    {personInfo.gender === 1 ? <span>Female</span> : <span>Male</span>}\r\n                  </p>\r\n                )}\r\n                <p className='me-4'>\r\n                  <b className='d-block'>Birthday</b>\r\n                  {personInfo.birthday ? <span>{personInfo.birthday}</span> : <span>-</span>}\r\n                </p>\r\n                <p className='me-4'>\r\n                  <b className='d-block'>Place of Birth</b>\r\n                  {personInfo.place_of_birth ? <span>{personInfo.place_of_birth}</span> : <span>-</span>}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className='col-12 col-md-9 col-xl-10 text-white justify-content-start ps-sm-1'>\r\n              <div>\r\n                <h2 className='mt-4 mt-md-0'>{personInfo.name} </h2>\r\n              </div>\r\n              <div>\r\n                <h3 className='my-1'>Biography</h3>\r\n                {personInfo.biography ? (\r\n                  <p className='preLineSpace my-1'>{personInfo.biography}</p>\r\n                ) : (\r\n                  `We don't have a biography for ${personInfo.name} `\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='container'>\r\n          <h3 className='text-light border-top py-3'>Acting</h3>\r\n          <MiniSlider data={personMovies} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = personInfo.name\r\n  }, [personInfo])\r\n\r\n  return <Style>{renderFarm()}</Style>\r\n}\r\nexport default Person\r\n"],"names":["props","value","useState","parseInt","toFixed","strokColor","setStrokColor","fontSize","width","useEffect","_jsx","style","concat","children","CircularProgressbar","maxValue","text","background","backgroundPadding","strokeWidth","styles","buildStyles","pathTransitionDuration","textColor","textSize","backgroundColor","trailColor","pathColor","_jsxs","styled","div","_templateObject","_taggedTemplateLiteral","SwiperCore","use","EffectCube","Navigation","data","type","defaultImage","el","target","src","Fragment","Style","Swiper","spaceBetween","initialSlide","navigation","speed","breakpoints","slidesPerView","slidesPerGroup","filter","item","poster_path","profile_path","map","index","SwiperSlide","Link","className","to","media_type","id","posterBaseUrl","alt","original_title","original_name","name","onError","vote_average","CircleProgressbar","title","release_date","split","first_air_date","character","height","useParams","personInfo","setPersonInfo","personMovies","setPersonMovies","window","scrollTo","getRequest","then","response","cast","document","known_for_department","gender","birthday","place_of_birth","biography","MiniSlider"],"sourceRoot":""}